com/aliyun/alink/linksdk/channel/core/base/AError = Com.Aliyun.Alink.Linksdk.Channel.Core.Base.AError
  <init>()V = .ctor()
  AKErrorInvokeNetError = AKErrorInvokeNetError
  AKErrorInvokeServerError = AKErrorInvokeServerError
  AKErrorLoginTokenIllegalError = AKErrorLoginTokenIllegalError
  AKErrorServerBusinessError = AKErrorServerBusinessError
  AKErrorSuccess = AKErrorSuccess
  AKErrorUnknownError = AKErrorUnknownError
  ERR_DOMAIN_NAME_ALINK = ErrDomainNameAlink
  getCode()I = Code
  setCode(I)V = Code
  getDomain()Ljava/lang/String; = Domain
  setDomain(Ljava/lang/String;)V = Domain
  getMsg()Ljava/lang/String; = Msg
  setMsg(Ljava/lang/String;)V = Msg
  getOriginResponseObject()Ljava/lang/Object; = OriginResponseObject
  setOriginResponseObject(Ljava/lang/Object;)V = OriginResponseObject
  getSubCode()I = SubCode
  setSubCode(I)V = SubCode
  getSubDomain()Ljava/lang/String; = SubDomain
  setSubDomain(Ljava/lang/String;)V = SubDomain
  getSubMsg()Ljava/lang/String; = SubMsg
  setSubMsg(Ljava/lang/String;)V = SubMsg
com/aliyun/alink/linksdk/channel/core/base/ARequest = Com.Aliyun.Alink.Linksdk.Channel.Core.Base.ARequest
  <init>()V = .ctor()
com/aliyun/alink/linksdk/channel/core/base/AResponse = Com.Aliyun.Alink.Linksdk.Channel.Core.Base.AResponse
  <init>()V = .ctor()
  data = Data
com/aliyun/alink/linksdk/channel/core/base/ASend = Com.Aliyun.Alink.Linksdk.Channel.Core.Base.ASend
  <init>(Lcom/aliyun/alink/linksdk/channel/core/base/ARequest;Lcom/aliyun/alink/linksdk/channel/core/base/IOnCallListener;)V = .ctor(Com.Aliyun.Alink.Linksdk.Channel.Core.Base.ARequest, Com.Aliyun.Alink.Linksdk.Channel.Core.Base.IOnCallListener)
  listener = Listener
  request = Request
  response = Response
  status = Status
  getListener()Lcom/aliyun/alink/linksdk/channel/core/base/IOnCallListener; = Listener
  getRequest()Lcom/aliyun/alink/linksdk/channel/core/base/ARequest; = Request
  getResponse()Lcom/aliyun/alink/linksdk/channel/core/base/AResponse; = Response
  getStatus()Lcom/aliyun/alink/linksdk/channel/core/base/ISendStatus; = Status
com/aliyun/alink/linksdk/channel/core/base/ASendStatus = Com.Aliyun.Alink.Linksdk.Channel.Core.Base.ASendStatus
  completed = Completed
  waitingToComplete = WaitingToComplete
  waitingToSend = WaitingToSend
  valueOf(Ljava/lang/String;)Lcom/aliyun/alink/linksdk/channel/core/base/ASendStatus; = ValueOf(string)
  values()[Lcom/aliyun/alink/linksdk/channel/core/base/ASendStatus; = Values()
com/aliyun/alink/linksdk/channel/core/base/INet = Com.Aliyun.Alink.Linksdk.Channel.Core.Base.INet
  asyncSend(Lcom/aliyun/alink/linksdk/channel/core/base/ARequest;Lcom/aliyun/alink/linksdk/channel/core/base/IOnCallListener;)Lcom/aliyun/alink/linksdk/channel/core/base/ASend; = AsyncSend(Com.Aliyun.Alink.Linksdk.Channel.Core.Base.ARequest, Com.Aliyun.Alink.Linksdk.Channel.Core.Base.IOnCallListener)
  retry(Lcom/aliyun/alink/linksdk/channel/core/base/ASend;)V = Retry(Com.Aliyun.Alink.Linksdk.Channel.Core.Base.ASend)
com/aliyun/alink/linksdk/channel/core/base/IOnCallListener = Com.Aliyun.Alink.Linksdk.Channel.Core.Base.IOnCallListener
  needUISafety()Z = NeedUISafety()
  onFailed(Lcom/aliyun/alink/linksdk/channel/core/base/ARequest;Lcom/aliyun/alink/linksdk/channel/core/base/AError;)V = OnFailed(Com.Aliyun.Alink.Linksdk.Channel.Core.Base.ARequest, Com.Aliyun.Alink.Linksdk.Channel.Core.Base.AError)
  onSuccess(Lcom/aliyun/alink/linksdk/channel/core/base/ARequest;Lcom/aliyun/alink/linksdk/channel/core/base/AResponse;)V = OnSuccess(Com.Aliyun.Alink.Linksdk.Channel.Core.Base.ARequest, Com.Aliyun.Alink.Linksdk.Channel.Core.Base.AResponse)
com/aliyun/alink/linksdk/channel/core/base/ISendStatus = Com.Aliyun.Alink.Linksdk.Channel.Core.Base.ISendStatus
com/aliyun/alink/linksdk/channel/core/persistent/BadNetworkException = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.BadNetworkException
  <init>()V = .ctor()
com/aliyun/alink/linksdk/channel/core/persistent/event/IConnectionStateListener = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.Event.IConnectionStateListener
  onConnected()V = OnConnected()
  onConnectFail(Ljava/lang/String;)V = OnConnectFail(string)
  onDisconnect()V = OnDisconnect()
com/aliyun/alink/linksdk/channel/core/persistent/event/INetSessionStateListener = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.Event.INetSessionStateListener
  onNeedLogin()V = OnNeedLogin()
  onSessionEffective()V = OnSessionEffective()
  onSessionInvalid()V = OnSessionInvalid()
com/aliyun/alink/linksdk/channel/core/persistent/event/IOnPushListener = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.Event.IOnPushListener
  onCommand(Ljava/lang/String;[B)V = OnCommand(string, byte[])
  shouldHandle(Ljava/lang/String;)Z = ShouldHandle(string)
com/aliyun/alink/linksdk/channel/core/persistent/event/PersistentEventDispatcher = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.Event.PersistentEventDispatcher
  a = A
  b = B
  c = C
  getInstance()Lcom/aliyun/alink/linksdk/channel/core/persistent/event/PersistentEventDispatcher; = Instance
  broadcastMessage(ILjava/lang/String;[BILjava/lang/String;)V = BroadcastMessage(int, string, byte[], int, string)
  registerNetSessionStateListener(Lcom/aliyun/alink/linksdk/channel/core/persistent/event/INetSessionStateListener;Z)V = RegisterNetSessionStateListener(Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.Event.INetSessionStateListener, bool)
  registerOnPushListener(Lcom/aliyun/alink/linksdk/channel/core/persistent/event/IOnPushListener;Z)V = RegisterOnPushListener(Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.Event.IOnPushListener, bool)
  registerOnTunnelStateListener(Lcom/aliyun/alink/linksdk/channel/core/persistent/event/IConnectionStateListener;Z)V = RegisterOnTunnelStateListener(Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.Event.IConnectionStateListener, bool)
  unregisterNetSessionStateListener(Lcom/aliyun/alink/linksdk/channel/core/persistent/event/INetSessionStateListener;)V = UnregisterNetSessionStateListener(Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.Event.INetSessionStateListener)
  unregisterOnPushListener(Lcom/aliyun/alink/linksdk/channel/core/persistent/event/IOnPushListener;)V = UnregisterOnPushListener(Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.Event.IOnPushListener)
  unregisterOnTunnelStateListener(Lcom/aliyun/alink/linksdk/channel/core/persistent/event/IConnectionStateListener;)V = UnregisterOnTunnelStateListener(Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.Event.IConnectionStateListener)
com/aliyun/alink/linksdk/channel/core/persistent/IOnRrpcResponseHandle = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.IOnRrpcResponseHandle
  onRrpcResponse(Ljava/lang/String;Lcom/aliyun/alink/linksdk/channel/core/base/AResponse;)V = OnRrpcResponse(string, Com.Aliyun.Alink.Linksdk.Channel.Core.Base.AResponse)
com/aliyun/alink/linksdk/channel/core/persistent/IOnSubscribeListener = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.IOnSubscribeListener
  needUISafety()Z = IOnSubscribeListenerNeedUISafety()
  onFailed(Ljava/lang/String;Lcom/aliyun/alink/linksdk/channel/core/base/AError;)V = OnFailed(string, Com.Aliyun.Alink.Linksdk.Channel.Core.Base.AError)
  onSuccess(Ljava/lang/String;)V = OnSuccess(string)
com/aliyun/alink/linksdk/channel/core/persistent/IOnSubscribeRrpcListener = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.IOnSubscribeRrpcListener
  needUISafety()Z = IOnSubscribeRrpcListenerNeedUISafety()
  onReceived(Ljava/lang/String;Lcom/aliyun/alink/linksdk/channel/core/persistent/PersistentRequest;Lcom/aliyun/alink/linksdk/channel/core/persistent/IOnRrpcResponseHandle;)V = OnReceived(string, Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.PersistentRequest, Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.IOnRrpcResponseHandle)
  onResponseFailed(Ljava/lang/String;Lcom/aliyun/alink/linksdk/channel/core/base/AError;)V = OnResponseFailed(string, Com.Aliyun.Alink.Linksdk.Channel.Core.Base.AError)
  onResponseSuccess(Ljava/lang/String;)V = OnResponseSuccess(string)
  onSubscribeFailed(Ljava/lang/String;Lcom/aliyun/alink/linksdk/channel/core/base/AError;)V = OnSubscribeFailed(string, Com.Aliyun.Alink.Linksdk.Channel.Core.Base.AError)
  onSubscribeSuccess(Ljava/lang/String;)V = OnSubscribeSuccess(string)
com/aliyun/alink/linksdk/channel/core/persistent/IPersisitentNet = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.IPersisitentNet
  getConnectState()Lcom/aliyun/alink/linksdk/channel/core/persistent/PersistentConnectState; = ConnectState
  destroy()V = Destroy()
  destroy(JLjava/lang/Object;Lorg/eclipse/paho/client/mqttv3/IMqttActionListener;)V = Destroy(long, Java.Lang.Object, Org.Eclipse.Paho.Client.Mqttv3.IMqttActionListener)
  init(Landroid/content/Context;Lcom/aliyun/alink/linksdk/channel/core/persistent/PersistentInitParams;)V = Init(Android.Content.Context, Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.PersistentInitParams)
  openLog(Z)V = OpenLog(bool)
  subscribe(Ljava/lang/String;Lcom/aliyun/alink/linksdk/channel/core/persistent/IOnSubscribeListener;)V = Subscribe(string, Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.IOnSubscribeListener)
  subscribe(Ljava/lang/String;Lcom/aliyun/alink/linksdk/channel/core/persistent/mqtt/request/PersisitentNetParams;Lcom/aliyun/alink/linksdk/channel/core/persistent/IOnSubscribeListener;)V = Subscribe(string, Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.Mqtt.Request.PersisitentNetParams, Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.IOnSubscribeListener)
  subscribeRrpc(Ljava/lang/String;Lcom/aliyun/alink/linksdk/channel/core/persistent/IOnSubscribeRrpcListener;)V = SubscribeRrpc(string, Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.IOnSubscribeRrpcListener)
  unSubscribe(Ljava/lang/String;Lcom/aliyun/alink/linksdk/channel/core/persistent/IOnSubscribeListener;)V = UnSubscribe(string, Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.IOnSubscribeListener)
com/aliyun/alink/linksdk/channel/core/persistent/ISendExecutor = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.ISendExecutor
  asyncSend(Lcom/aliyun/alink/linksdk/channel/core/base/ASend;)V = AsyncSend(Com.Aliyun.Alink.Linksdk.Channel.Core.Base.ASend)
com/aliyun/alink/linksdk/channel/core/persistent/mqtt/MqttConfigure = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.Mqtt.MqttConfigure
  <init>()V = .ctor()
  automaticReconnect = AutomaticReconnect
  cleanSession = CleanSession
  clientId = ClientId
  DEFAULT_HOST = DefaultHost
  DEFAULT_ITLS_HOST = DefaultItlsHost
  DEFAULT_ROOTCRT = DefaultRootcrt
  deviceName = DeviceName
  deviceSecret = DeviceSecret
  disableNetworkCheckBeforeSend = DisableNetworkCheckBeforeSend
  isCheckRootCrt = IsCheckRootCrt
  itlsLogLevel = ItlsLogLevel
  itlsReadTimeout = ItlsReadTimeout
  itlsWriteTimeout = ItlsWriteTimeout
  maxInflight = MaxInflight
  mqttClientId = MqttClientId
  mqttHost = MqttHost
  mqttPassWord = MqttPassWord
  mqttRootCrtFile = MqttRootCrtFile
  MQTT_SECURE_MODE_ITLS = MqttSecureModeItls
  MQTT_SECURE_MODE_TCP = MqttSecureModeTcp
  MQTT_SECURE_MODE_TLS = MqttSecureModeTls
  mqttUserName = MqttUserName
  pingSender = PingSender
  pingSenderType = PingSenderType
  productKey = ProductKey
  productSecret = ProductSecret
  SECURE_MODE = SecureMode
  SIGN_METHOD = SignMethod
  getKeepAliveInterval()I = KeepAliveInterval
  setKeepAliveInterval(I)Z = SetKeepAliveInterval(int)
com/aliyun/alink/linksdk/channel/core/persistent/mqtt/MqttInitParams = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.Mqtt.MqttInitParams
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string)
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V = .ctor(string, string, string, string, int)
  deviceName = DeviceName
  deviceSecret = DeviceSecret
  productKey = ProductKey
  productSecret = ProductSecret
  receiveOfflineMsg = ReceiveOfflineMsg
  secureMode = SecureMode
  checkValid()Z = CheckValid()
com/aliyun/alink/linksdk/channel/core/persistent/mqtt/request/MqttPublishRequest = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.Mqtt.Request.MqttPublishRequest
  <init>()V = .ctor()
  isRPC = IsRPC
  msgId = MsgId
  qos = Qos
  replyTopic = ReplyTopic
  topic = Topic
com/aliyun/alink/linksdk/channel/core/persistent/mqtt/request/MqttRrpcRequest = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.Mqtt.Request.MqttRrpcRequest
  <init>()V = .ctor()
  replyTopic = ReplyTopic
  topic = Topic
  setTopic(Ljava/lang/String;)V = SetTopic(string)
com/aliyun/alink/linksdk/channel/core/persistent/mqtt/request/MqttSubscribeRequest = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.Mqtt.Request.MqttSubscribeRequest
  <init>()V = .ctor()
  isSubscribe = IsSubscribe
  subscribeRequestParams = SubscribeRequestParams
  topic = Topic
com/aliyun/alink/linksdk/channel/core/persistent/mqtt/request/MqttSubscribeRequestParams = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.Mqtt.Request.MqttSubscribeRequestParams
  <init>()V = .ctor()
  qos = Qos
com/aliyun/alink/linksdk/channel/core/persistent/mqtt/request/PersisitentNetParams = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.Mqtt.Request.PersisitentNetParams
  <init>()V = .ctor()
com/aliyun/alink/linksdk/channel/core/persistent/mqtt/send/MqttSendStatus = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.Mqtt.Send.MqttSendStatus
  completed = Completed
  published = Published
  subReplyed = SubReplyed
  waitingToComplete = WaitingToComplete
  waitingToPublish = WaitingToPublish
  waitingToSend = WaitingToSend
  waitingToSubReply = WaitingToSubReply
  valueOf(Ljava/lang/String;)Lcom/aliyun/alink/linksdk/channel/core/persistent/mqtt/send/MqttSendStatus; = ValueOf(string)
  values()[Lcom/aliyun/alink/linksdk/channel/core/persistent/mqtt/send/MqttSendStatus; = Values()
com/aliyun/alink/linksdk/channel/core/persistent/mqtt/send/MqttThrowable = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.Mqtt.Send.MqttThrowable
  <init>(Ljava/lang/String;)V = .ctor(string)
  message = Message
com/aliyun/alink/linksdk/channel/core/persistent/PersistentConnectState = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.PersistentConnectState
  CONNECTED = Connected
  CONNECTFAIL = Connectfail
  CONNECTING = Connecting
  DISCONNECTED = Disconnected
  valueOf(Ljava/lang/String;)Lcom/aliyun/alink/linksdk/channel/core/persistent/PersistentConnectState; = ValueOf(string)
  values()[Lcom/aliyun/alink/linksdk/channel/core/persistent/PersistentConnectState; = Values()
com/aliyun/alink/linksdk/channel/core/persistent/PersistentInitParams = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.PersistentInitParams
  <init>()V = .ctor()
com/aliyun/alink/linksdk/channel/core/persistent/PersistentNet = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.PersistentNet
  <init>()V = .ctor()
  getConnectState()Lcom/aliyun/alink/linksdk/channel/core/persistent/PersistentConnectState; = ConnectState
  getDefaultProtocol()Ljava/lang/String; = DefaultProtocol
  setDefaultProtocol(Ljava/lang/String;)V = DefaultProtocol
  getInitParams()Lcom/aliyun/alink/linksdk/channel/core/persistent/PersistentInitParams; = InitParams
  getInstance()Lcom/aliyun/alink/linksdk/channel/core/persistent/PersistentNet; = Instance
  getSDKVersion()Ljava/lang/String; = SDKVersion
  asyncSend(Lcom/aliyun/alink/linksdk/channel/core/base/ARequest;Lcom/aliyun/alink/linksdk/channel/core/base/IOnCallListener;)Lcom/aliyun/alink/linksdk/channel/core/base/ASend; = AsyncSend(Com.Aliyun.Alink.Linksdk.Channel.Core.Base.ARequest, Com.Aliyun.Alink.Linksdk.Channel.Core.Base.IOnCallListener)
  destroy()V = Destroy()
  destroy(JLjava/lang/Object;Lorg/eclipse/paho/client/mqttv3/IMqttActionListener;)V = Destroy(long, Java.Lang.Object, Org.Eclipse.Paho.Client.Mqttv3.IMqttActionListener)
  init(Landroid/content/Context;Lcom/aliyun/alink/linksdk/channel/core/persistent/PersistentInitParams;)V = Init(Android.Content.Context, Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.PersistentInitParams)
  openLog(Z)V = OpenLog(bool)
  retry(Lcom/aliyun/alink/linksdk/channel/core/base/ASend;)V = Retry(Com.Aliyun.Alink.Linksdk.Channel.Core.Base.ASend)
  setReportVersion(Ljava/lang/String;)V = SetReportVersion(string)
  subscribe(Ljava/lang/String;Lcom/aliyun/alink/linksdk/channel/core/persistent/IOnSubscribeListener;)V = Subscribe(string, Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.IOnSubscribeListener)
  subscribe(Ljava/lang/String;Lcom/aliyun/alink/linksdk/channel/core/persistent/mqtt/request/PersisitentNetParams;Lcom/aliyun/alink/linksdk/channel/core/persistent/IOnSubscribeListener;)V = Subscribe(string, Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.Mqtt.Request.PersisitentNetParams, Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.IOnSubscribeListener)
  subscribeRrpc(Ljava/lang/String;Lcom/aliyun/alink/linksdk/channel/core/persistent/IOnSubscribeRrpcListener;)V = SubscribeRrpc(string, Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.IOnSubscribeRrpcListener)
  unSubscribe(Ljava/lang/String;Lcom/aliyun/alink/linksdk/channel/core/persistent/IOnSubscribeListener;)V = UnSubscribe(string, Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.IOnSubscribeListener)
com/aliyun/alink/linksdk/channel/core/persistent/PersistentRequest = Com.Aliyun.Alink.Linksdk.Channel.Core.Persistent.PersistentRequest
  <init>()V = .ctor()
  context = Context
  payloadObj = PayloadObj
