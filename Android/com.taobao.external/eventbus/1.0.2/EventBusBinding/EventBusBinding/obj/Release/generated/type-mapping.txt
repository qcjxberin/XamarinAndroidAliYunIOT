de/greenrobot/event/EventBus = DE.Greenrobot.Event.EventBus
  <init>()V = .ctor()
  TAG = Tag
  getDefault()Lde/greenrobot/event/EventBus; = Default
  clearCaches()V = ClearCaches()
  clearSkipMethodNameVerifications()V = ClearSkipMethodNameVerifications()
  configureLogSubscriberExceptions(Z)V = ConfigureLogSubscriberExceptions(bool)
  getStickyEvent(Ljava/lang/Class;)Ljava/lang/Object; = GetStickyEvent(Java.Lang.Class)
  post(Ljava/lang/Object;)V = Post(Java.Lang.Object)
  postSticky(Ljava/lang/Object;)V = PostSticky(Java.Lang.Object)
  register(Ljava/lang/Object;)V = Register(Java.Lang.Object)
  register(Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Class;)V = Register(Java.Lang.Object, Java.Lang.Class, params Java.Lang.Class[])
  register(Ljava/lang/Object;Ljava/lang/String;)V = Register(Java.Lang.Object, string)
  register(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Class;)V = Register(Java.Lang.Object, string, Java.Lang.Class, params Java.Lang.Class[])
  registerSticky(Ljava/lang/Object;)V = RegisterSticky(Java.Lang.Object)
  registerSticky(Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Class;)V = RegisterSticky(Java.Lang.Object, Java.Lang.Class, params Java.Lang.Class[])
  registerSticky(Ljava/lang/Object;Ljava/lang/String;)V = RegisterSticky(Java.Lang.Object, string)
  registerSticky(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Class;)V = RegisterSticky(Java.Lang.Object, string, Java.Lang.Class, params Java.Lang.Class[])
  removeStickyEvent(Ljava/lang/Class;)Ljava/lang/Object; = RemoveStickyEvent(Java.Lang.Class)
  removeStickyEvent(Ljava/lang/Object;)Z = RemoveStickyEvent(Java.Lang.Object)
  skipMethodNameVerificationFor(Ljava/lang/Class;)V = SkipMethodNameVerificationFor(Java.Lang.Class)
  unregister(Ljava/lang/Object;)V = Unregister(Java.Lang.Object)
  unregister(Ljava/lang/Object;[Ljava/lang/Class;)V = Unregister(Java.Lang.Object, params Java.Lang.Class[])
de/greenrobot/event/EventBusException = DE.Greenrobot.Event.EventBusException
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
de/greenrobot/event/NoSubscriberEvent = DE.Greenrobot.Event.NoSubscriberEvent
  <init>(Lde/greenrobot/event/EventBus;Ljava/lang/Object;)V = .ctor(DE.Greenrobot.Event.EventBus, Java.Lang.Object)
  eventBus = EventBus
  originalEvent = OriginalEvent
de/greenrobot/event/SubscriberExceptionEvent = DE.Greenrobot.Event.SubscriberExceptionEvent
  <init>(Lde/greenrobot/event/EventBus;Ljava/lang/Throwable;Ljava/lang/Object;Ljava/lang/Object;)V = .ctor(DE.Greenrobot.Event.EventBus, Java.Lang.Throwable, Java.Lang.Object, Java.Lang.Object)
  causingEvent = CausingEvent
  causingSubscriber = CausingSubscriber
  eventBus = EventBus
  throwable = Throwable
de/greenrobot/event/ThreadMode = DE.Greenrobot.Event.ThreadMode
  Async = Async
  BackgroundThread = BackgroundThread
  MainThread = MainThread
  PostThread = PostThread
  valueOf(Ljava/lang/String;)Lde/greenrobot/event/ThreadMode; = ValueOf(string)
  values()[Lde/greenrobot/event/ThreadMode; = Values()
de/greenrobot/event/util/AsyncExecutor = DE.Greenrobot.Event.Util.AsyncExecutor
  create()Lde/greenrobot/event/util/AsyncExecutor; = Create()
  execute(Lde/greenrobot/event/util/AsyncExecutor$RunnableEx;)V = Execute(DE.Greenrobot.Event.Util.AsyncExecutor.IRunnableEx)
  builder()Lde/greenrobot/event/util/AsyncExecutor$Builder; = InvokeBuilder()
de/greenrobot/event/util/ErrorDialogConfig = DE.Greenrobot.Event.Util.ErrorDialogConfig
  <init>(Landroid/content/res/Resources;II)V = .ctor(Android.Content.Res.Resources, int, int)
  addMapping(Ljava/lang/Class;I)Lde/greenrobot/event/util/ErrorDialogConfig; = AddMapping(Java.Lang.Class, int)
  disableExceptionLogging()V = DisableExceptionLogging()
  getMessageIdForThrowable(Ljava/lang/Throwable;)I = GetMessageIdForThrowable(Java.Lang.Throwable)
  setDefaultDialogIconId(I)V = SetDefaultDialogIconId(int)
  setDefaultEventTypeOnDialogClosed(Ljava/lang/Class;)V = SetDefaultEventTypeOnDialogClosed(Java.Lang.Class)
  setEventBus(Lde/greenrobot/event/EventBus;)V = SetEventBus(DE.Greenrobot.Event.EventBus)
  setTagForLoggingExceptions(Ljava/lang/String;)V = SetTagForLoggingExceptions(string)
de/greenrobot/event/util/ErrorDialogFragmentFactory = DE.Greenrobot.Event.Util.ErrorDialogFragmentFactory
  <init>(Lde/greenrobot/event/util/ErrorDialogConfig;)V = .ctor(DE.Greenrobot.Event.Util.ErrorDialogConfig)
  config = Config
  createErrorFragment(Lde/greenrobot/event/util/ThrowableFailureEvent;Landroid/os/Bundle;)Ljava/lang/Object; = CreateErrorFragment(DE.Greenrobot.Event.Util.ThrowableFailureEvent, Android.OS.Bundle)
  getMessageFor(Lde/greenrobot/event/util/ThrowableFailureEvent;Landroid/os/Bundle;)Ljava/lang/String; = GetMessageFor(DE.Greenrobot.Event.Util.ThrowableFailureEvent, Android.OS.Bundle)
  getTitleFor(Lde/greenrobot/event/util/ThrowableFailureEvent;Landroid/os/Bundle;)Ljava/lang/String; = GetTitleFor(DE.Greenrobot.Event.Util.ThrowableFailureEvent, Android.OS.Bundle)
  prepareErrorFragment(Lde/greenrobot/event/util/ThrowableFailureEvent;ZLandroid/os/Bundle;)Ljava/lang/Object; = PrepareErrorFragment(DE.Greenrobot.Event.Util.ThrowableFailureEvent, bool, Android.OS.Bundle)
de/greenrobot/event/util/ErrorDialogFragments = DE.Greenrobot.Event.Util.ErrorDialogFragments
  <init>()V = .ctor()
  ERROR_DIALOG_ICON = ErrorDialogIcon
  EVENT_TYPE_ON_CLICK = EventTypeOnClick
  createDialog(Landroid/content/Context;Landroid/os/Bundle;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/Dialog; = CreateDialog(Android.Content.Context, Android.OS.Bundle, Android.Content.IDialogInterfaceOnClickListener)
  handleOnClick(Landroid/content/DialogInterface;ILandroid/app/Activity;Landroid/os/Bundle;)V = HandleOnClick(Android.Content.IDialogInterface, int, Android.App.Activity, Android.OS.Bundle)
de/greenrobot/event/util/ErrorDialogManager = DE.Greenrobot.Event.Util.ErrorDialogManager
  <init>()V = .ctor()
  factory = Factory
  KEY_EVENT_TYPE_ON_CLOSE = KeyEventTypeOnClose
  KEY_FINISH_AFTER_DIALOG = KeyFinishAfterDialog
  KEY_ICON_ID = KeyIconId
  KEY_MESSAGE = KeyMessage
  KEY_TITLE = KeyTitle
  TAG_ERROR_DIALOG = TagErrorDialog
  TAG_ERROR_DIALOG_MANAGER = TagErrorDialogManager
  attachTo(Landroid/app/Activity;)V = AttachTo(Android.App.Activity)
  attachTo(Landroid/app/Activity;Z)V = AttachTo(Android.App.Activity, bool)
  attachTo(Landroid/app/Activity;ZLandroid/os/Bundle;)V = AttachTo(Android.App.Activity, bool, Android.OS.Bundle)
  checkLogException(Lde/greenrobot/event/util/ThrowableFailureEvent;)V = CheckLogException(DE.Greenrobot.Event.Util.ThrowableFailureEvent)
de/greenrobot/event/util/ExceptionToResourceMapping = DE.Greenrobot.Event.Util.ExceptionToResourceMapping
  <init>()V = .ctor()
  throwableToMsgIdMap = ThrowableToMsgIdMap
  addMapping(Ljava/lang/Class;I)Lde/greenrobot/event/util/ExceptionToResourceMapping; = AddMapping(Java.Lang.Class, int)
  mapThrowable(Ljava/lang/Throwable;)Ljava/lang/Integer; = MapThrowable(Java.Lang.Throwable)
  mapThrowableFlat(Ljava/lang/Throwable;)Ljava/lang/Integer; = MapThrowableFlat(Java.Lang.Throwable)
de/greenrobot/event/util/ThrowableFailureEvent = DE.Greenrobot.Event.Util.ThrowableFailureEvent
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;Z)V = .ctor(Java.Lang.Throwable, bool)
  suppressErrorUi = SuppressErrorUi
  throwable = Throwable
  isSuppressErrorUi()Z = IsSuppressErrorUi
  getThrowable()Ljava/lang/Throwable; = Throwable
