com/aliyun/alink/linksdk/tools/AError = Com.Aliyun.Alink.Linksdk.Tools.AError
  <init>()V = .ctor()
  AKErrorInvokeNetError = AKErrorInvokeNetError
  AKErrorInvokeServerError = AKErrorInvokeServerError
  AKErrorLoginTokenIllegalError = AKErrorLoginTokenIllegalError
  AKErrorServerBusinessError = AKErrorServerBusinessError
  AKErrorSuccess = AKErrorSuccess
  AKErrorUnknownError = AKErrorUnknownError
  ERR_DOMAIN_NAME_ALINK = ErrDomainNameAlink
  getCode()I = Code
  setCode(I)V = Code
  getDomain()Ljava/lang/String; = Domain
  setDomain(Ljava/lang/String;)V = Domain
  getMsg()Ljava/lang/String; = Msg
  setMsg(Ljava/lang/String;)V = Msg
  getOriginResponseObject()Ljava/lang/Object; = OriginResponseObject
  setOriginResponseObject(Ljava/lang/Object;)V = OriginResponseObject
  getSubCode()I = SubCode
  setSubCode(I)V = SubCode
  getSubDomain()Ljava/lang/String; = SubDomain
  setSubDomain(Ljava/lang/String;)V = SubDomain
  getSubMsg()Ljava/lang/String; = SubMsg
  setSubMsg(Ljava/lang/String;)V = SubMsg
com/aliyun/alink/linksdk/tools/ALog = Com.Aliyun.Alink.Linksdk.Tools.ALog
  <init>()V = .ctor()
  LEVEL_DEBUG = LevelDebug
  LEVEL_ERROR = LevelError
  LEVEL_INFO = LevelInfo
  LEVEL_WARNING = LevelWarning
  getLevel()B = Level
  setLevel(B)V = Level
  getLogStrategyType()Lcom/aliyun/alink/linksdk/tools/log/LogStrategyType; = LogStrategyType
  setLogStrategyType(Lcom/aliyun/alink/linksdk/tools/log/LogStrategyType;)V = LogStrategyType
  getLogUpload()Lcom/aliyun/alink/linksdk/tools/log/ILogUpload; = LogUpload
  setLogUpload(Lcom/aliyun/alink/linksdk/tools/log/ILogUpload;)V = LogUpload
  getUploadLevel()B = UploadLevel
  setUploadLevel(B)V = UploadLevel
  d(Ljava/lang/String;Ljava/lang/String;)V = D(string, string)
  e(Ljava/lang/String;Ljava/lang/String;)V = E(string, string)
  e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)V = E(string, string, Java.Lang.Exception)
  e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = E(string, string, string)
  i(Ljava/lang/String;Ljava/lang/String;)V = I(string, string)
  llog(BLjava/lang/String;Ljava/lang/String;)V = Llog(sbyte, string, string)
  makeLogTag(Ljava/lang/Class;)Ljava/lang/String; = MakeLogTag(Java.Lang.Class)
  makeLogTag(Ljava/lang/String;)Ljava/lang/String; = MakeLogTag(string)
  setLogDispatcher(Lcom/aliyun/alink/linksdk/tools/log/ILogDispatcher;)V = SetLogDispatcher(Com.Aliyun.Alink.Linksdk.Tools.Log.ILogDispatcher)
  w(Ljava/lang/String;Ljava/lang/String;)V = W(string, string)
com/aliyun/alink/linksdk/tools/BuildConfig = Com.Aliyun.Alink.Linksdk.Tools.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/aliyun/alink/linksdk/tools/log/HLoggerFactory = Com.Aliyun.Alink.Linksdk.Tools.Log.HLoggerFactory
  <init>()V = .ctor()
  getInstance(Ljava/lang/String;)Lcom/aliyun/alink/linksdk/tools/log/ILogger; = GetInstance(string)
  setLogger(Lcom/aliyun/alink/linksdk/tools/log/ILogger;)V = SetLogger(Com.Aliyun.Alink.Linksdk.Tools.Log.ILogger)
com/aliyun/alink/linksdk/tools/log/IDGenerater = Com.Aliyun.Alink.Linksdk.Tools.Log.IDGenerater
  <init>()V = .ctor()
  generateId()I = GenerateId()
com/aliyun/alink/linksdk/tools/log/ILogDispatcher = Com.Aliyun.Alink.Linksdk.Tools.Log.ILogDispatcher
  log(ILjava/lang/String;Ljava/lang/String;)V = Log(int, string, string)
com/aliyun/alink/linksdk/tools/log/ILogger = Com.Aliyun.Alink.Linksdk.Tools.Log.ILogger
  d(Ljava/lang/String;Ljava/lang/String;)V = D(string, string)
  e(Ljava/lang/String;Ljava/lang/String;)V = E(string, string)
  e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)V = E(string, string, Java.Lang.Exception)
  i(Ljava/lang/String;Ljava/lang/String;)V = I(string, string)
  w(Ljava/lang/String;Ljava/lang/String;)V = W(string, string)
com/aliyun/alink/linksdk/tools/log/ILogStrategy = Com.Aliyun.Alink.Linksdk.Tools.Log.ILogStrategy
  isSupport()Z = IsSupport
  log(ILjava/lang/String;Ljava/lang/String;)V = Log(int, string, string)
com/aliyun/alink/linksdk/tools/log/ILogUpload = Com.Aliyun.Alink.Linksdk.Tools.Log.ILogUpload
  fileUpload(Ljava/lang/String;Ljava/lang/String;)V = FileUpload(string, string)
  realTimeUpload(ILjava/lang/String;Ljava/lang/String;)V = RealTimeUpload(int, string, string)
com/aliyun/alink/linksdk/tools/log/LogcatLogStrategy = Com.Aliyun.Alink.Linksdk.Tools.Log.LogcatLogStrategy
  <init>()V = .ctor()
  isSupport()Z = IsSupport
  log(ILjava/lang/String;Ljava/lang/String;)V = Log(int, string, string)
com/aliyun/alink/linksdk/tools/log/LogerImpl = Com.Aliyun.Alink.Linksdk.Tools.Log.LogerImpl
  <init>(Ljava/lang/String;)V = .ctor(string)
  d(Ljava/lang/String;Ljava/lang/String;)V = D(string, string)
  e(Ljava/lang/String;Ljava/lang/String;)V = E(string, string)
  e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)V = E(string, string, Java.Lang.Exception)
  i(Ljava/lang/String;Ljava/lang/String;)V = I(string, string)
  w(Ljava/lang/String;Ljava/lang/String;)V = W(string, string)
com/aliyun/alink/linksdk/tools/log/LogHelper = Com.Aliyun.Alink.Linksdk.Tools.Log.LogHelper
  <init>()V = .ctor()
  getLogLevel(I)Ljava/lang/String; = GetLogLevel(int)
  print(ILjava/lang/String;Ljava/lang/String;)V = Print(int, string, string)
  targetStackTraceMSg()Ljava/lang/String; = TargetStackTraceMSg()
com/aliyun/alink/linksdk/tools/log/LogLevel = Com.Aliyun.Alink.Linksdk.Tools.Log.LogLevel
  DEBUG = Debug
  ERROR = Error
  INFO = Info
  WRAN = Wran
  getTag()Ljava/lang/String; = Tag
  valueOf(Ljava/lang/String;)Lcom/aliyun/alink/linksdk/tools/log/LogLevel; = ValueOf(string)
  values()[Lcom/aliyun/alink/linksdk/tools/log/LogLevel; = Values()
com/aliyun/alink/linksdk/tools/log/LogStrategyFactory = Com.Aliyun.Alink.Linksdk.Tools.Log.LogStrategyFactory
  getInstance()Lcom/aliyun/alink/linksdk/tools/log/LogStrategyFactory; = Instance
  createStrategy(Lcom/aliyun/alink/linksdk/tools/log/LogStrategyType;)Lcom/aliyun/alink/linksdk/tools/log/ILogStrategy; = CreateStrategy(Com.Aliyun.Alink.Linksdk.Tools.Log.LogStrategyType)
com/aliyun/alink/linksdk/tools/log/LogStrategyType = Com.Aliyun.Alink.Linksdk.Tools.Log.LogStrategyType
  FILE_STRATEGY = FileStrategy
  LOGCAT_STRATEGY = LogcatStrategy
  REALTIME_STRATEGY = RealtimeStrategy
  valueOf(Ljava/lang/String;)Lcom/aliyun/alink/linksdk/tools/log/LogStrategyType; = ValueOf(string)
  values()[Lcom/aliyun/alink/linksdk/tools/log/LogStrategyType; = Values()
com/aliyun/alink/linksdk/tools/log/RealTimeLogStrategy = Com.Aliyun.Alink.Linksdk.Tools.Log.RealTimeLogStrategy
  <init>(Landroid/os/Handler;)V = .ctor(Android.OS.Handler)
  isSupport()Z = IsSupport
  log(ILjava/lang/String;Ljava/lang/String;)V = Log(int, string, string)
com/aliyun/alink/linksdk/tools/log/Request = Com.Aliyun.Alink.Linksdk.Tools.Log.Request
  id = Id
  method = Method
  params = Params
  version = Version
com/aliyun/alink/linksdk/tools/log/Response = Com.Aliyun.Alink.Linksdk.Tools.Log.Response
  <init>()V = .ctor()
  code = Code
  data = Data
  id = Id
  localizedMsg = LocalizedMsg
  message = Message
com/aliyun/alink/linksdk/tools/log/TLogHelper = Com.Aliyun.Alink.Linksdk.Tools.Log.TLogHelper
  <init>()V = .ctor()
  isToTlogOn()Z = ToTlogOn
  setToTlogOn(Z)V = ToTlogOn
  printToTLog(ILjava/lang/String;Ljava/lang/String;)V = PrintToTLog(int, string, string)
com/aliyun/alink/linksdk/tools/NetTools = Com.Aliyun.Alink.Linksdk.Tools.NetTools
  <init>()V = .ctor()
  getWifiInfo(Landroid/content/Context;)Landroid/net/wifi/WifiInfo; = GetWifiInfo(Android.Content.Context)
  getWifiSSID(Landroid/content/Context;)Ljava/lang/String; = GetWifiSSID(Android.Content.Context)
  is3G(Landroid/content/Context;)Z = Is3G(Android.Content.Context)
  isAvailable(Landroid/content/Context;)Z = IsAvailable(Android.Content.Context)
  isWifi(Landroid/content/Context;)Z = IsWifi(Android.Content.Context)
com/aliyun/alink/linksdk/tools/SystemUtil = Com.Aliyun.Alink.Linksdk.Tools.SystemUtil
  <init>()V = .ctor()
  getDeviceID()Ljava/lang/String; = DeviceID
com/aliyun/alink/linksdk/tools/ThreadTools = Com.Aliyun.Alink.Linksdk.Tools.ThreadTools
  <init>()V = .ctor()
  getProcessName(Landroid/content/Context;I)Ljava/lang/String; = GetProcessName(Android.Content.Context, int)
  isAppBroughtToBackgroundByTask(Landroid/app/Application;)Z = IsAppBroughtToBackgroundByTask(Android.App.Application)
  runOnUiThread(Ljava/lang/Runnable;)V = RunOnUiThread(Java.Lang.IRunnable)
  submitTask(Ljava/lang/Runnable;Z)V = SubmitTask(Java.Lang.IRunnable, bool)
  submitTask(Ljava/lang/Runnable;ZI)V = SubmitTask(Java.Lang.IRunnable, bool, int)
com/aliyun/alink/linksdk/tools/tracker/AliCloudUtSdkTracker = Com.Aliyun.Alink.Linksdk.Tools.Tracker.AliCloudUtSdkTracker
  <init>()V = .ctor()
  <init>(Landroid/app/Application;)V = .ctor(Android.App.Application)
  init(Landroid/app/Application;)V = Init(Android.App.Application)
com/aliyun/alink/linksdk/tools/tracker/AntSdkTracker = Com.Aliyun.Alink.Linksdk.Tools.Tracker.AntSdkTracker
  <init>()V = .ctor()
com/aliyun/alink/linksdk/tools/tracker/BaseSdkTrack = Com.Aliyun.Alink.Linksdk.Tools.Tracker.BaseSdkTrack
  <init>()V = .ctor()
  isSupportTrack = IsSupportTrack
  isSupport()Z = IsSupport
  sendEvent(Ljava/lang/String;Ljava/util/Map;)V = SendEvent(string, System.Collections.Generic.IDictionary<string, string>)
com/aliyun/alink/linksdk/tools/tracker/EmptySdkTracker = Com.Aliyun.Alink.Linksdk.Tools.Tracker.EmptySdkTracker
  <init>()V = .ctor()
com/aliyun/alink/linksdk/tools/tracker/IoTUTSdkTracker = Com.Aliyun.Alink.Linksdk.Tools.Tracker.IoTUTSdkTracker
  <init>()V = .ctor()
com/aliyun/alink/linksdk/tools/tracker/ISDKTracker = Com.Aliyun.Alink.Linksdk.Tools.Tracker.ISDKTracker
  sendEvent(Ljava/lang/String;Ljava/util/Map;)V = SendEvent(string, System.Collections.Generic.IDictionary<string, string>)
com/aliyun/alink/linksdk/tools/tracker/IValidityChecker = Com.Aliyun.Alink.Linksdk.Tools.Tracker.IValidityChecker
  isSupport()Z = IsSupport
com/aliyun/alink/linksdk/tools/tracker/UTSdkTracker = Com.Aliyun.Alink.Linksdk.Tools.Tracker.UTSdkTracker
  <init>()V = .ctor()
  <init>(Landroid/app/Application;)V = .ctor(Android.App.Application)
  init(Landroid/app/Application;)V = Init(Android.App.Application)
com/aliyun/alink/linksdk/tools/ut/AUserTrack = Com.Aliyun.Alink.Linksdk.Tools.UT.AUserTrack
  <init>()V = .ctor()
  mDispatch = MDispatch
  UTKEY_DEVICE_IOTID = UtkeyDeviceIotid
  UTKEY_END_TIME = UtkeyEndTime
  UTKEY_ERROR_CODE = UtkeyErrorCode
  UTKEY_EVENT_NAME = UtkeyEventName
  UTKEY_MODULE = UtkeyModule
  UTKEY_PAGE_NAME = UtkeyPageName
  UTKEY_PERFORMANCEID = UtkeyPerformanceid
  UTKEY_START_TIME = UtkeyStartTime
  UTKEY_SUB_ERROR_CODE = UtkeySubErrorCode
  record(Ljava/lang/String;Ljava/lang/String;JJ)V = Record(string, string, long, long)
  record(Ljava/lang/String;Ljava/util/Map;)V = Record(string, System.Collections.Generic.IDictionary<string, string>)
  record(Ljava/lang/String;JJ)V = Record(string, long, long)
  record(Ljava/lang/String;JJLjava/lang/String;)V = Record(string, long, long, string)
  setDispatch(Lcom/aliyun/alink/linksdk/tools/ut/IUserTrackDispatch;)V = SetDispatch(Com.Aliyun.Alink.Linksdk.Tools.UT.IUserTrackDispatch)
com/aliyun/alink/linksdk/tools/ut/IUserTrackDispatch = Com.Aliyun.Alink.Linksdk.Tools.UT.IUserTrackDispatch
  record(Ljava/lang/String;Ljava/util/Map;)V = Record(string, System.Collections.Generic.IDictionary<string, string>)
